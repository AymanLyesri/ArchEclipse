(defwidget bar_center []
  (box
    :space-evenly false
    :spacing 5
    :halign "center"
    :class "bar-center"
    :style "min-height:${bar_height}px"
    (music)
    (bandwidth)
    (arch)
    (clock)
    (titlebar)
  )
)

(defwidget bandwidth []
  (box
    :space-evenly false
    :halign "center"
    :class "bandwidth"
    :style "min-height:${bar_height}px"
    (label
    :text "â‡¡${bandwidth_up} â‡£${bandwidth_down}")
  )
)

(defwidget arch []
  (box
    :class "arch"
    (button
      :onclick "$HOME/.config/hypr/scripts/menu"
      (label
        :class "icon"
        :text "ó°£‡"
      )
    )
  )
)

(defwidget titlebar []
  (revealer
    :reveal {active_window != ''}
    :transition "slideright"
    :duration "500ms"
    (label
      :style active_window_color
      :class "titlebar"
      :limit-width "15"
      :text active_window
    )
  )
)

(defwidget music []
  (revealer
    :reveal {player_active == 1 || player_active == 2}
    :transition "slideleft"
    :duration "700ms"
    (box
      :class "music"
      :hexpand "true"
      :space-evenly false
      :style "background-image: linear-gradient(to right, #131313 , rgba(90, 20, 52, 0)), url('${music_art}');"
      (eventbox
        :onclick "$HOME/.config/hypr/eww/scripts/music --play-pause"
        (box
          :space-evenly false
          :orientation "h"
          (label ; Title
            :class "music-label title"
            :style "color:${music_title_color}"
            :limit-width "25"
            :text "${music_icon}  ${music_title}"
          )
          (label ; Author
            :style "color:${music_title_color}"
            :class "music-label artist"
            :text "ðŸ¡„ ${music_artist}"
          )
        )
      )
      (button
        :class "previous"
        :onclick "$HOME/.config/hypr/eww/scripts/music --previous"
        (label
          :style "color:${music_title_color}"
          :class "icon"
          :text "â®œ"
        )
      )
      (button
        :class "next"
        :onclick "$HOME/.config/hypr/eww/scripts/music --next"
        (label
          :style "color:${music_title_color}"
          :class "icon"
          :text "â®ž"
        )
      )
      (revealer
        :reveal {false}
        (label
          :class "music-unlabel"
          :text "${music_updater}" ; updating music vars while render text
        )
      )
    )
  )
)

(defwidget clock []
  (eventbox
    :onhover "${EWW_CMD} update time_date=true"
    :onhoverlost "${EWW_CMD} update time_date=false"
    (box
      :space-evenly false
      :orientation "h"
      :spacing "10"
      :class "clock ${ active_window != '' ? 'no-radius-right' : '' }"
      (label
        :text "îŽŠ ${clock_time}"
      )
      (revealer
        :transition "slideright"
        :duration "500ms"
        :reveal time_date
        (label
          :text "| ${clock_date}"
          :style "margin-right: 10px;"
        )
      )
    )
  )
)