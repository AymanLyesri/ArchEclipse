
; Sidebar
; (defpoll image_ratio :interval "5s" "printf '%.1f' $(identify -format '%[fx:h/w]' waifu/img.jpg)")
; (defvar display_tags false)
; (defvar sidebar_rev false)
; (defpoll quote :interval "5h" "python ./bar/scripts/quotes.py 60 | sed -e 's/.\{20\}/&\n/g'")

; left bar
(deflisten active_workspaces :intial "[]" "./bar/scripts/get_active_workspaces.sh")
(deflisten focused_workspace "./bar/scripts/get_focused_workspace.sh")
(deflisten unfocused_workspace "./bar/scripts/get_unfocused_workspace.sh")
(deflisten special_workspace "./bar/scripts/get_special_workspace.sh")
(defvar workspaces '["NULL","","","","","","󰙯"]')

; center bar
(deflisten active_window :initial "[]" "./bar/scripts/window.sh")
(defpoll clock_time :interval "10s" "date '+\%H:\%M'")
(defpoll clock_date :interval "10s" "date '+\%a, \%d \%b'")
(defpoll vol_percent :interval "5s" "./bar/scripts/volume --get")
(defpoll brightness_percent :interval "5s" "./bar/scripts/brightness")
(defvar time_date false)

; Music
(defpoll music_updater :interval "2s" "./bar/scripts/music.sh --update")
(defvar player_active 0)
(defvar music_art "")
(defvar music_art_URL "")
(defvar music_icon "")
(defvar music_title "")
(defvar music_title_color "")
(defvar music_artist "")
(defvar music_prog 0)

; Bandwidth usage (in KB/s)
(deflisten bandwidth :intial "[]" "./bar/scripts/bandwidth.sh")

; right bar
(defpoll theme_id :interval "5h" "./bar/scripts/light_dark.sh default")
(defvar THEME_ICON '["✩","☀"]')
(defvar theme_command_arguments '["light","dark"]') ; opposite to switch to when clicked

; Bluetooth
(defvar bluetooth_state false)
(defpoll bluetooth_dev :interval "5s" "bluetoothctl show | grep Name | cut -d ' ' -f 2-")

; Wifi
(defvar wifi_state false)
(defpoll ESSID_WLAN :interval "5s" "nmcli -t -f name connection show --active | head -n 1")

; Volume
(defvar vol_rev false)
(defvar VOL_ICON '["󰸈","","","󰕾"]')
(defpoll vol_state :intial 1 :interval "1s" "./bar/scripts/volume --get-state")

; Brightness
(defvar bright_rev false)

; global bar
; (defpoll bar_height :interval "1s" "./bar/scripts/empty_workspace")
(defpoll bar_margin :interval "2s" "bash ./bar/scripts/dynamic_margin.sh")
